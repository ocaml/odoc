// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.8.2

//# unitInfo: Provides: Dune__exe__Odoc_html_frontend
//# unitInfo: Requires: Dune__exe__Tyxml, Stdlib
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_class = "class",
    cst_cons = "cons",
    cst_entry_name = "entry-name";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = " ",
    cst$0 = ".",
    kind_doc = "doc",
    kind_typedecl = "type",
    kind_module = "mod",
    kind_exception = "exn",
    kind_class_type = cst_class,
    kind_class = cst_class,
    kind_method = "meth",
    kind_extension_constructor = cst_cons,
    kind_module_type = "sig",
    kind_constructor = cst_cons,
    kind_field = "field",
    kind_value = "val",
    kind_extension = "ext",
    kind_impl = "source",
    Dune_exe_Tyxml = global_data.Dune__exe__Tyxml,
    Stdlib = global_data.Stdlib,
    _a_ = [0, "entry-kind", 0],
    _b_ = [0, cst_entry_name, 0],
    _c_ = [0, "prefix-name", 0],
    _d_ = [0, cst_entry_name, 0],
    _e_ = [0, "entry-rhs", 0],
    _f_ = [0, "entry-comment", 0],
    _g_ = [0, "entry-title", 0];
   function of_strings(kind, prefix_name, name, rhs, typedecl_params, doc){
    var
     _h_ = [0, caml_call1(Dune_exe_Tyxml[1][6], kind), 0],
     _i_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _a_), 0],
     kind$0 = caml_call2(Dune_exe_Tyxml[1][3], _i_, _h_);
    if(typedecl_params)
     var
      p = typedecl_params[1],
      _j_ = caml_call2(Stdlib[28], p, cst),
      _k_ = [0, caml_call1(Dune_exe_Tyxml[1][6], _j_), 0],
      _l_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _b_), 0],
      typedecl_params$0 = [0, caml_call2(Dune_exe_Tyxml[1][4], _l_, _k_), 0];
    else
     var typedecl_params$0 = 0;
    if(prefix_name){
     var prefix_name$0 = prefix_name[1];
     if(prefix_name$0 !== "")
      var
       _m_ = caml_call2(Stdlib[28], prefix_name$0, cst$0),
       _n_ = [0, caml_call1(Dune_exe_Tyxml[1][6], _m_), 0],
       _o_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _c_), 0],
       _p_ = [0, caml_call2(Dune_exe_Tyxml[1][4], _o_, _n_), 0];
     else
      var _p_ = 0;
     var prefix_name$1 = _p_;
    }
    else
     var prefix_name$1 = 0;
    if(name)
     var
      name$0 = name[1],
      _q_ = [0, caml_call1(Dune_exe_Tyxml[1][6], name$0), 0],
      _r_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _d_), 0],
      name$1 = [0, caml_call2(Dune_exe_Tyxml[1][4], _r_, _q_), 0];
    else
     var name$1 = 0;
    if(rhs)
     var
      rhs$0 = rhs[1],
      _s_ = [0, caml_call1(Dune_exe_Tyxml[1][6], rhs$0), 0],
      _t_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _e_), 0],
      rhs$1 = [0, caml_call2(Dune_exe_Tyxml[1][3], _t_, _s_), 0];
    else
     var rhs$1 = 0;
    var
     _u_ = [0, caml_call1(Dune_exe_Tyxml[1][7][1], doc), 0],
     _v_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _f_), 0],
     _w_ = [0, caml_call2(Dune_exe_Tyxml[1][5], _v_, _u_), 0],
     _x_ = caml_call2(Stdlib[37], name$1, rhs$1),
     _y_ = caml_call2(Stdlib[37], prefix_name$1, _x_),
     _z_ = caml_call2(Stdlib[37], typedecl_params$0, _y_),
     _A_ = [0, caml_call1(Dune_exe_Tyxml[1][2], _g_), 0];
    return [0, kind$0, [0, caml_call2(Dune_exe_Tyxml[1][3], _A_, _z_), _w_]];
   }
   var
    Dune_exe_Odoc_html_frontend =
      [0,
       of_strings,
       kind_doc,
       kind_typedecl,
       kind_module,
       kind_exception,
       kind_class_type,
       kind_class,
       kind_method,
       kind_extension_constructor,
       kind_module_type,
       kind_constructor,
       kind_field,
       kind_value,
       kind_extension,
       kind_impl];
   runtime.caml_register_global
    (26, Dune_exe_Odoc_html_frontend, "Dune__exe__Odoc_html_frontend");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiIubWFpbi5lb2Jqcy9qc29vL2R1bmVfX2V4ZV9fT2RvY19odG1sX2Zyb250ZW5kLmNtby5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJraW5kX2RvYyIsImtpbmRfdHlwZWRlY2wiLCJraW5kX21vZHVsZSIsImtpbmRfZXhjZXB0aW9uIiwia2luZF9jbGFzc190eXBlIiwia2luZF9jbGFzcyIsImtpbmRfbWV0aG9kIiwia2luZF9leHRlbnNpb25fY29uc3RydWN0b3IiLCJraW5kX21vZHVsZV90eXBlIiwia2luZF9jb25zdHJ1Y3RvciIsImtpbmRfZmllbGQiLCJraW5kX3ZhbHVlIiwia2luZF9leHRlbnNpb24iLCJraW5kX2ltcGwiLCJvZl9zdHJpbmdzIiwia2luZCIsInByZWZpeF9uYW1lIiwibmFtZSIsInJocyIsInR5cGVkZWNsX3BhcmFtcyIsImRvYyIsImtpbmQkMCIsInAiLCJ0eXBlZGVjbF9wYXJhbXMkMCIsInByZWZpeF9uYW1lJDAiLCJwcmVmaXhfbmFtZSQxIiwibmFtZSQwIiwibmFtZSQxIiwicmhzJDAiLCJyaHMkMSJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2Vfcm9vdC9zaGVybG9kb2MvanNvby9vZG9jX2h0bWxfZnJvbnRlbmQubWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7O0lBc0NJQTtJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQzs7Ozs7Ozs7OztZQWpEQUMsV0FBWUMsTUFBTUMsYUFBYUMsTUFBTUMsS0FBS0MsaUJBQWlCQztJQUM3RDtLQUNnRCxVQUFFLGlDQUZwQ0w7S0FFSyxVQUFFO0tBQWpCTSxTQUFPO09BRmlDRjtLQWM5QjtNQVJMRyxJQU5tQ0g7TUFjOUIsTUFBQSx1QkFSTEc7TUFRRCxVQUFFO01BTEEsVUFBRTtNQU5SQyx3QkFJRTs7U0FKRkE7T0FIZ0JQO1NBb0JYUSxnQkFwQldSO1FBb0JYUTtNQUN5QztPQUFBLE1BQUEsdUJBRHpDQTtPQUNtQyxVQUFFO09BQWhDLFVBQUU7aUJBQVY7OztTQUxGQzs7O1NBQUFBO09BaEI2QlI7S0F3QnVCO01BQS9DUyxTQXhCd0JUO01Bd0J1QixVQUFFLGlDQUFqRFM7TUFBa0IsVUFBRTtNQUZ6QkMsYUFFZTs7U0FGZkE7T0F0Qm1DVDtLQTZCZTtNQUE3Q1UsUUE3QjhCVjtNQTZCZSxVQUFFLGlDQUEvQ1U7TUFBaUIsVUFBRTtNQUh4QkMsWUFHYzs7U0FIZEE7SUFPcUM7S0FBQSxVQUFFLG9DQWpDa0JUO0tBaUNwRCxVQUFFO2VBQVQ7S0FEdUUsTUFBQSx1QkFWckVPLFFBSUFFO0tBTXVELE1BQUEsdUJBaEJ2REo7S0FnQm9DLE1BQUEsdUJBN0JwQ0Y7S0E2Qk0sVUFBRTtJQURaLFdBN0JJRixZQThCRjtHQUVEOzs7O09BbENDUDtPQW9DQWQ7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7Ozs7RSIsInNvdXJjZXNDb250ZW50IjpbIigqIGNvcHktcGFzdGVkIGZyb20gb2RvYy9zcmMvc2VhcmNoL29kb2NfaHRtbF9mcm9udGVuZC5tbCAqKVxuXG5sZXQgb2Zfc3RyaW5ncyB+a2luZCB+cHJlZml4X25hbWUgfm5hbWUgfnJocyB+dHlwZWRlY2xfcGFyYW1zIH5kb2MgPVxuICBsZXQgb3BlbiBUeXhtbC5IdG1sIGluXG4gIGxldCBraW5kID0gY29kZSB+YTpbIGFfY2xhc3MgWyBcImVudHJ5LWtpbmRcIiBdIF0gWyB0eHQga2luZCBdXG4gIGFuZCB0eXBlZGVjbF9wYXJhbXMgPVxuICAgIG1hdGNoIHR5cGVkZWNsX3BhcmFtcyB3aXRoXG4gICAgfCBOb25lIC0+IFtdXG4gICAgfCBTb21lIHAgLT5cbiAgICAgIFsgc3BhblxuICAgICAgICAgIH5hOlxuICAgICAgICAgICAgWyBhX2NsYXNzXG4gICAgICAgICAgICAgICAgWyAoKiB0aGUgcGFyYW1ldGVyIG9mIHRoZSB0eXBlZGVjbCBhcmUgaGlnaGxpZ2h0ZWQgYXMgaWYgcGFydCBvZiBtYWluIGVudHJ5IG5hbWUuICopXG4gICAgICAgICAgICAgICAgICBcImVudHJ5LW5hbWVcIlxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICBbIHR4dCAocCBeIFwiIFwiKSBdXG4gICAgICBdXG4gIGFuZCBwcmVmaXhfbmFtZSA9XG4gICAgbWF0Y2ggcHJlZml4X25hbWUgd2l0aFxuICAgIHwgTm9uZSAtPiBbXVxuICAgIHwgU29tZSBcIlwiIC0+IFtdXG4gICAgfCBTb21lIHByZWZpeF9uYW1lIC0+XG4gICAgICBbIHNwYW4gfmE6WyBhX2NsYXNzIFsgXCJwcmVmaXgtbmFtZVwiIF0gXSBbIHR4dCAocHJlZml4X25hbWUgXiBcIi5cIikgXSBdXG4gIGFuZCBuYW1lID1cbiAgICBtYXRjaCBuYW1lIHdpdGhcbiAgICB8IFNvbWUgbmFtZSAtPiBbIHNwYW4gfmE6WyBhX2NsYXNzIFsgXCJlbnRyeS1uYW1lXCIgXSBdIFsgdHh0IG5hbWUgXSBdXG4gICAgfCBOb25lIC0+IFtdXG4gIGFuZCByaHMgPVxuICAgIG1hdGNoIHJocyB3aXRoXG4gICAgfCBOb25lIC0+IFtdXG4gICAgfCBTb21lIHJocyAtPiBbIGNvZGUgfmE6WyBhX2NsYXNzIFsgXCJlbnRyeS1yaHNcIiBdIF0gWyB0eHQgcmhzIF0gXVxuICBpblxuICBbIGtpbmRcbiAgOyBjb2RlIH5hOlsgYV9jbGFzcyBbIFwiZW50cnktdGl0bGVcIiBdIF0gKHR5cGVkZWNsX3BhcmFtcyBAIHByZWZpeF9uYW1lIEAgbmFtZSBAIHJocylcbiAgOyBkaXYgfmE6WyBhX2NsYXNzIFsgXCJlbnRyeS1jb21tZW50XCIgXSBdIFsgVW5zYWZlLmRhdGEgZG9jIF1cbiAgXVxuXG5sZXQga2luZF9kb2MgPSBcImRvY1wiXG5sZXQga2luZF90eXBlZGVjbCA9IFwidHlwZVwiXG5sZXQga2luZF9tb2R1bGUgPSBcIm1vZFwiXG5sZXQga2luZF9leGNlcHRpb24gPSBcImV4blwiXG5sZXQga2luZF9jbGFzc190eXBlID0gXCJjbGFzc1wiXG5sZXQga2luZF9jbGFzcyA9IFwiY2xhc3NcIlxubGV0IGtpbmRfbWV0aG9kID0gXCJtZXRoXCJcbmxldCBraW5kX2V4dGVuc2lvbl9jb25zdHJ1Y3RvciA9IFwiY29uc1wiXG5sZXQga2luZF9tb2R1bGVfdHlwZSA9IFwic2lnXCJcbmxldCBraW5kX2NvbnN0cnVjdG9yID0gXCJjb25zXCJcbmxldCBraW5kX2ZpZWxkID0gXCJmaWVsZFwiXG5sZXQga2luZF92YWx1ZSA9IFwidmFsXCJcbmxldCBraW5kX2V4dGVuc2lvbiA9IFwiZXh0XCJcbmxldCBraW5kX2ltcGwgPSBcInNvdXJjZVwiXG4iXX0=
